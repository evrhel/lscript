
class StringBuilder

	global static const chararray intMap null

	function static interp <staticinit>()
		seto intMap char dword[10]
		setb intMap[0] byte[48]
		setb intMap[1] byte[49]
		setb intMap[2] byte[50]
		setb intMap[3] byte[51]
		setb intMap[4] byte[52]
		setb intMap[5] byte[53]
		setb intMap[6] byte[54]
		setb intMap[7] byte[55]
		setb intMap[8] byte[56]
		setb intMap[9] byte[57]
		ret

	global dynamic varying chararray chars
	global dynamic varying uint stringLength

	function dynamic interp <init>()
		seto this.chars char dword[32]
		setd this.stringLength dword[0]
		ret

	function dynamic interp append(object String string)
		static_call System.arraycopy(LObject;iLObject;ii) string.chars dword[0] this.chars dword[0] string.chars.length
		add this.stringLength this.stringLength string.chars.length
		
		ret

	function dynamic interp append(char c)
		setv this.chars[this.stringLength] c
		add this.stringLength this.stringLength c
		ret

	function dynamic interp append(long num)
		if num < long[0]
			dynamic_call this.append(C) '-'
			neg num num
		end
		dynamic_call this.append(q) num
		ret

	function dynamic interp append(ulong num)
		ulong digit
		while num > ulong[0]
			mod digit num ulong[10]
			dynamic_call this.append(C) intMap[digit]
			div num num ulong[10]
		end
		ret

	function dynamic interp toString()
		object result
		seto result new String <init>()
		setv result.chars this.chars
		retv result

