

class Main
	
	global static const int myNum dword[22]
	global static varying uint myNum2 dword[19]
	
	# main function
	function static interp main(objectarray String args)
		#object myString
		#object myObject
		#seto myString "Hello World"

		#seto myObject new Main <init>(LString;) myString
		#dynamic_call myObject.print()

		#if args.length == int[0]
		#	dynamic_call System.stdout.println(LString;) "There are no arguments!"
		#else if args.length == int[1]
		#	dynamic_call System.stdout.println(LString;) "There is one argument!"
		#else
		#	dynamic_call System.stdout.println(LString;) "There is more than one argument!"
		#	bool result
		#	dynamic_call args[0].equals(LString;) args[1]
		#	setr result
		#	if result
		#		dynamic_call System.stdout.println(LString;) "First and second are equal"
		#	else
		#		dynamic_call System.stdout.println(LString;) "First and second are not equal"
		#	end
		#end

		#int counter
		#while counter < args.length
		#	dynamic_call System.stdout.println(LString;) args[counter]
			#dynamic_call System.stdout.println(LString;) args[counter]
		#	add counter counter int[1]
		#end

		#object strresult
		#bool compareResult

		#dynamic_call System.stdout.print(LString;) "input (type exit to exit): "
		#dynamic_call System.stdin.readLine()
		#setr strresult

		#dynamic_call strresult.equals(LString;) "exit"
		#setr compareResult

		#while compareResult == int[0]
		#	dynamic_call System.stdout.print(LString;) "You typed: "
		#	dynamic_call System.stdout.println(LString;) strresult

		#	dynamic_call System.stdout.print(LString;) "input (type exit to exit): "
		#	dynamic_call System.stdin.readLine()
		#	setr strresult

		#	dynamic_call strresult.equals(LString;) "exit"
		#	setr compareResult
		#end 

		#intarray array
		#seto array int dword[5]

		object process
		static_call System.startProcess(LString;LString;LString;) "C:\\Windows\\notepad.exe" null null
		setr process

		dynamic_call process.toString()
		dynamic_call System.stdout.println(LString;) ret
		
		
		dynamic_call System.stdout.println(LString;) "Started process!"

		if process != ulong[0]
			dynamic_call process.wait(i) Process.INFINITE
		end

		dynamic_call System.stdout.println(LString;) "Process closed!"

		object builder
		seto builder new StringBuilder <init>()
		dynamic_call builder.append(LString;) "Hello"
		dynamic_call builder.append(C) ' '
		dynamic_call builder.append(LString;) "World"
		dynamic_call builder.append(C) ' '
		dynamic_call builder.append(q) qword[12]
		dynamic_call builder.toString()
		dynamic_call System.stdout.println(LString;) ret

		retd dword[25]


	global dynamic varying object myString
	
	function dynamic interp <init>(object String aString)
		setv this.myString aString
		ret

	function dynamic interp print()
		dynamic_call System.stdout.println(LString;) this.myString
		ret

