package lscript.io

class FileOutputStream
	
	global dynamic varying object handle

	constructor()
		ret

	constructor(object String filename)
		seto this.handle new StdFileHandle(LString;I) filename StdFileHandle.WRITE
		ret

	constructor(object String filename, int mode)
		if mode != StdFileHandle.MODE_WRITE
			if mode != StdFileHandle.MODE_WRITE_BINARY
				ret
			end
		end
		seto this.handle new StdFileHandle(LString;I) filename mode
		ret

	constructor(object StdFileHandle handle)
		setv this.handle handle
		ret

	function uint write(chararray data, int off, int length)
		dynamic_call this.handle.write([Cii) data off length
		retr

	function void print(String str)
		dynamic_call this.handle.write([Cii) str.chars dword[0] str.chars.length
		ret

	function void println()
		dynamic_call this.handle.putc(C) byte[10]
		ret

	function void println(String str)
		dynamic_call this.print(LString;) str
		dynamic_call this.println()
		ret

	function void close()
		dynamic_call this.handle.close()
		setq this.handle null
		ret

	function void finalize()
		if this.handle != qword[0]
			dynamic_call close()
		end
		ret