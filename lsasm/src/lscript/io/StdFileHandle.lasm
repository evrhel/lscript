package lscript.io

class StdFileHandle

	global static const int MODE_READ dword[1]
	global static const int MODE_READ_BINARY dword[2]
	global static const int MODE_WRITE dword[3]
	global static const int MODE_WRITE_BINARY dword[4]

	global dynamic varying ulong nativeHandle
	global dynamic varying int fileMode

	function dynamic interp void <init>()
		ret

	function dynamic interp void <init>(ulong handle, int mode)
		setv this.nativeHandle handle
		setv this.fileMode mode
		ret

	function dynamic interp void open(object String filepath, int mode)
		static_call fopen(LString;I) filepath mode
		setr this.nativeHandle
		ret

	function dynamic interp void close()
		static_call fclose(q) this.nativeHandle
		ret

	function dynamic interp void putc(char c)
		static_call fputc(qC) this.nativeHandle c
		ret

	function dynamic interp uint write(chararray data, uint off, uint length)
		static_call fwrite(q[Cii) this.nativeHandle data off length
		retr

	function dynamic interp uint read(chararray buf, uint off, uint count)
		static_call fread(q[Cii) this.nativeHandle buf off count
		retr

	function dynamic interp object readLine()
		object String result
		static_call freadline(q) this.nativeHandle
		seto result new String <init>()
		setr result.chars
		retv result

	function static native ulong fopen(object String filepath, int mode)
	function static native void fclose(ulong handle)
	function static native void fputc(ulong handle, char c)
	function static native uint fwrite(ulong handle, chararray data, uint off, uint length)
	function static native uint fread(ulong handle, chararray buf, uint off, uint count)
	function static native chararray freadline(ulong handle)
