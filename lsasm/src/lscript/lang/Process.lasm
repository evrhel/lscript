
class Process

	global static const uint INFINITE dword[-1]

	global dynamic varying ulong nativeHandle

	function dynamic interp void <init>()
		ret

	function dynamic interp uint getPID()
		static_call getPID(q) this.nativeHandle
		retr

	function dynamic interp uint wait(uint length)
		static_call wait(qi) this.nativeHandle length
		retr

	function dynamic interp uint wait()
		dynamic_call this.wait(i) Process.INFINITE
		retr

	function dynamic interp bool isRunning()
		static_call isRunning(q) this.nativeHandle
		retr

	function dynamic interp bool stop()
		static_call stop(q) this.nativeHandle
		retr

	function dynamic interp bool forceStop()
		static_call forceStop(q) this.nativeHandle
		retr

	function dynamic interp void finalize()
		static_call freeProcessData(q) this.nativeHandle
		ret

	function static native ulong startProcess(object String processName, object String commandLine, object String workingDir)
	function static native uint getPID(ulong nativeHandle)
	function static native uint wait(ulong nativeHandle, uint length)
	function static native bool isRunning(ulong nativeHandle)
	function static native bool stop(ulong nativeHandle)
	function static native bool forceStop(ulong nativeHandle)
	function static native void freeProcessData(ulong nativeHandle)
