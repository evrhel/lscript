class Main

	function static interp void main(objectarray String args)
		int negative
		setd negative dword[-2]

		dynamic_call System.stdout.print(LString;) "abs(-2) = "
		static_call Math.abs(I) negative
		static_call Int.toString(I) ret
		dynamic_call System.stdout.println(LString;) ret

		dynamic_call System.stdout.println(LString;) "Hello World!"
		if args.length > uint[0]
			dynamic_call System.stdout.println(LString;) "I will now print all the command line arguments:"

			int counter
			int num
			setd counter dword[0]

			while counter < args.length
				setv num counter
				add num num int[1]
				static_call Int.toString(I) num
				dynamic_call System.stdout.print(LString;) ret
				dynamic_call System.stdout.print(LString;) ". "

				dynamic_call System.stdout.println(LString;) args[counter]
				add counter counter int[1]
			end
		end

		static_call myFunc()

		object Main myObject
		seto myObject new Main(LString;) "From dynamic function"

		dynamic_call myObject.printMessage()

		ret

	function static interp void myFunc()
		dynamic_call System.stdout.println(LString;) "From static function"
		ret

	global dynamic varying object message

	constructor(object String message)
		setv this.message message
		ret

	function dynamic interp void printMessage()
		dynamic_call System.stdout.println(LString;) this.message
		ret


