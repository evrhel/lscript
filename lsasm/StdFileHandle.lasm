
class StdFileHandle

	global static const int MODE_READ dword[1]
	global static const int MODE_READ_BINARY dword[2]
	global static const int MODE_WRITE dword[3]
	global static const int MODE_WRITE_BINARY dword[4]

	global dynamic varying ulong nativeHandle
	global dynamic varying int fileMode

	function dynamic interp <init>()
		ret

	function dynamic interp <init>(ulong handle, int mode)
		setv this.nativeHandle handle
		setv this.fileMode mode
		ret

	function dynamic interp open(object String filepath, int mode)
		static_call fopen(LString;I) filepath mode
		setr this.nativeHandle
		ret

	function dynamic interp close()
		static_call fclose(q[Cii) this.nativeHandle
		ret

	function dynamic interp putc(char c)
		static_call fputc(qC) this.nativeHandle c
		ret

	function dynamic interp write(chararray data, uint off, uint length)
		static_call fwrite(q[Cii) this.nativeHandle data off length
		retr

	function dynamic interp read(chararray buf, uint off, uint count)
		static_call fread(q[Cii) this.nativeHandle buf off count
		retr

	function dynamic interp readLine()
		object result
		static_call freadline(q) this.nativeHandle
		seto result new String <init>()
		setr result.chars
		retv result

	function static native fopen(object String filepath, int mode)
	function static native fclose(ulong handle)
	function static native fputc(ulong handle, char c)
	function static native fwrite(ulong handle, chararray data, uint off, uint length)
	function static native fread(ulong handle, chararray buf, uint off, uint count)
	function static native freadline(ulong handle)
